plugins {
    id 'java-library'
    id "com.github.ben-manes.versions" version "0.51.0"
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation libs.junit.jupiter
    testImplementation libs.hamcrest
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

testing {
    suites {
        test {
            useJUnitJupiter(libs.versions.junit.jupiter)
            targets {
                all {
                    testTask.configure {
                        systemProperty 'java.util.logging.config.file', 'src/test/resources/logging.properties'
                        systemProperty 'jextract.trace.downcalls', 'true'
                        environment "LD_LIBRARY_PATH", "${project.buildDir}/lua-install/lib/"
                        environment "DYLD_LIBRARY_PATH", "${project.buildDir}/lua-install/lib/"
                        jvmArgs '--enable-native-access=ALL-UNNAMED'
                    }
                }
            }
        }
    }
}

task downloadJextract(type: DownloadTask) {
    OperatingSystem currentOs = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem
    def os = ""
    if(currentOs.isMacOsX()){
        os="macos"
    } else if(currentOs.isLinux()) {
        os="linux"
    }
    def arch = "x64"
    sourceUrl = "https://download.java.net/java/early_access/jextract/22/5/openjdk-22-jextract+5-33_${os}-${arch}_bin.tar.gz"
    target = file("${project.buildDir}/jextract.tar.gz")
}

task unpackJextract(type: Copy, dependsOn: [tasks.downloadJextract]) {
    from tarTree(resources.gzip(tasks.downloadJextract.outputs.files[0]))
    into file("${project.buildDir}/jextract/")
}

task buildLua(type: Exec) {
    def luaSrc = "${projectDir}/lua"
    def installDir = "${project.buildDir}/lua-install"
    workingDir luaSrc
    commandLine 'make', 'all', 'install', "INSTALL_TOP=$installDir"
    inputs.dir(luaSrc)
    outputs.dir(installDir)
}

task generateNativeInterface(type: Exec, dependsOn: [tasks.buildLua, tasks.unpackJextract]) {
    def jextractBinary = "${tasks.unpackJextract.outputs.files[0]}/jextract-22/bin/jextract"
    def installDir = tasks.buildLua.outputs.files[0]
    def generatedSrc = "${project.buildDir}/generated/sources/jextract/"
    commandLine jextractBinary,
                '--include-dir', "$installDir/include",
                '--output', generatedSrc,
                '--target-package', 'org.itsallcode.jlua.ffi',
                '--library', 'lua',
                '--header-class-name', 'Lua',
                "$projectDir/lua/src/all_lua.h"
    inputs.dir(installDir)
    outputs.dir(generatedSrc)
}

compileJava {
    options.compilerArgs += ['--enable-preview', '-Xlint:all,-preview,-restricted', '-Werror']
}

sourceSets {
    main {
        java {
            srcDir(generateNativeInterface)
        }
    }
}
