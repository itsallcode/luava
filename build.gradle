plugins {
    id 'java-library'
    id "com.github.ben-manes.versions" version "0.51.0"
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation libs.guava
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

task buildLua(type: Exec) {
    def luaSrc = "${projectDir}/lua"
    def installDir = "${project.buildDir}/lua-install"
    workingDir luaSrc
    commandLine 'make', 'all', 'install', "INSTALL_TOP=$installDir"
    inputs.dir(luaSrc)
    outputs.dir(installDir)
}

task generateNativeInterface(type: Exec, dependsOn: [tasks.buildLua]) {
    def installDir = tasks.buildLua.outputs.files[0]
    def generatedSrc = "${project.buildDir}/generated/jextract/"
    commandLine 'jextract',
                '--source',
                '--include-dir', "$installDir/include",
                '--output', generatedSrc,
                '--target-package', 'org.itsallcode.jlua.ffi',
                '--library', 'lua',
                '--header-class-name', 'Lua',
                "$installDir/include/lua.h"
    inputs.dir(installDir)
    outputs.dir(generatedSrc)
}

compileJava {
    options.compilerArgs += ['--enable-preview', '-Xlint:all,-preview', '-Werror']
}

sourceSets {
    main {
        java {
            srcDir(generateNativeInterface)
        }
    }
}
